name: Test
on: [push, pull_request]
jobs:
  test:
    strategy:
      matrix:
        go-version: [1.17.x, 1.18.x, 1.19.x, 1.20.x, 1.21.x]
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - run: go version
      - run: go get -t -v ./...
      - run: go vet $(go list ./... | grep -v /vendor/)
      - run: go test -v -cover -race ./...

      - name: Run GolangCI-Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.53
          args: --timeout=5m

      - name: Run GoSec
        if: matrix.os == 'ubuntu-latest'
        uses: securego/gosec@master
        with:
          args: -exclude-dir _examples ./...

      - name: Run GoVulnCheck
        if: matrix.go-version != '1.17.x' && matrix.go-version != '1.18.x'
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: ${{ matrix.go-version }}
          go-package: ./...
